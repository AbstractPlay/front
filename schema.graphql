# source: https://api.dev.abstractplay.com/graphqlauth
# timestamp: Sun Feb 17 2019 14:18:27 GMT-0700 (Mountain Standard Time)

schema {
  query: APQueryAuth
  mutation: APMutatorAuth
}

type APMutatorAuth {
  """Create a new profile"""
  createProfile(input: NewProfileInput!): UserType

  """Delete direct messages"""
  deleteDms(input: DeleteDmsInput!): [DmsType]

  """Issue a new challenge"""
  issueChallenge(input: NewChallengeInput!): ChallengeType

  """Submit a move to a game"""
  moveGame(input: MoveGameInput!): GamesDataType

  """Preview a move to a game"""
  moveGamePreview(input: MoveGameInput!): GamesDataPreviewType

  """Post a new chat message to a game"""
  newChat(input: NewChatInput!): GamesDataChatType

  """Issue a new console command to a game"""
  newConsole(input: NewConsoleInput!): GamesDataType

  """Mark direct messages as read"""
  readDms(input: ReadDmsInput!): [DmsType]

  """Resign from a game in progress"""
  resignGame(input: ResignGameInput!): GamesDataType

  """Confirm or withdraw from a pending challenge"""
  respondChallenge(input: RespondChallengeInput!): ChallengeType

  """Send a new direct message"""
  sendDm(input: SendDmInput!): DmsType

  """Update your existing profile"""
  updateProfile(input: PatchProfileInput!): UserType

  """
  Update your game rankings. This input completely replaces existing rankings. This action is therefore idempotent.
  """
  updateRankings(input: UpdateRankingsInput!): [RankType]

  """
  Update your game tags. The tags you provide replace all existing tags for the
  given game. This action is therefore idempotent.
  """
  updateTags(input: UpdateTagsInput!): [TagType]

  """Vote on a console command"""
  voteConsole(input: VoteConsoleInput!): GamesDataType

  """Withdraw a console command"""
  withdrawConsole(input: WithdrawConsoleInput!): GamesDataType
}

type APQueryAuth {
  """A specific challenge"""
  challenge(id: String!): ChallengeType

  """A list of all challenges"""
  challenges: [ChallengeType]

  """A single game's metadata"""
  gameMeta(
    """The game's unique id"""
    id: String = null

    """The game's shortcode"""
    shortcode: String = null
  ): GamesMetaType

  """All games in progress"""
  games: [GamesDataType]

  """Metadata for multiple games"""
  gamesMeta(
    """A tag to search for"""
    tag: String = null
  ): [GamesMetaType]

  """The currently logged-in user"""
  me: MeType

  """A single user record"""
  user(id: String!): UserType

  """List of registered users"""
  users(country: String = null): [UserType]
}

type ChallengeType {
  """The game clock's increment value, in hours"""
  clockInc: Int

  """The game clock's maximum value, in hours"""
  clockMax: Int

  """The game clock's starting value, in hours"""
  clockStart: Int

  """The date the challenge was issued"""
  dateIssued: Date!

  """The game type of this challenge"""
  game: GamesMetaType

  """This challenge's unique ID"""
  id: ID

  """The player who issued the challenge"""
  issuer: UserType

  """Free-form notes the issuer included with the challenge"""
  notes: String!

  """The number of players"""
  numPlayers: Int

  """
  List of players who have so far accepted or been invited to join the challenge
  """
  players: [UserType]

  """List of variants applied to this challenge"""
  variants: [String]
}

type ConsoleType {
  """The command that was actually issued"""
  command: String

  """The date the command was issued"""
  date: DateTime

  """The game the console command applies to"""
  game: GamesDataType

  """Console entry's unique ID number"""
  id: ID

  """The user who issued the command"""
  user: UserType

  """All submitted votes"""
  votes: [ConsoleVoteType]
}

type ConsoleVoteType {
  """The command this vote applies to"""
  command: ConsoleType

  """Vote's unique ID number"""
  id: ID

  """The user the vote belongs to"""
  user: UserType

  """The vote itself"""
  vote: Boolean
}

"""
The `Date` scalar type represents a year, month and day in accordance with the
[ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) standard.
"""
scalar Date

"""
The `DateTime` scalar type represents a date and time. `DateTime` expects
timestamps to be formatted in accordance with the
[ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) standard.
"""
scalar DateTime

"""
The `DateTimeOffset` scalar type represents a date, time and offset from UTC.
`DateTimeOffset` expects timestamps to be formatted in accordance with the
[ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) standard.
"""
scalar DateTimeOffset

scalar Decimal

"""The input required when deleting DMs"""
input DeleteDmsInput {
  """The message ID numbers"""
  ids: [String]!
}

type DmsType {
  """This entry's unique ID number"""
  id: ID

  """The text of the message"""
  message: String!

  """The user who received the message"""
  receiver: UserType

  """The user who sent the message"""
  sender: UserType

  """The date and time the message was sent"""
  timestamp: DateTime
}

type GamesDataChatType {
  """The game in which this chat was posted"""
  game: GamesDataType

  """This entry's unique ID number"""
  id: ID

  """The text of the chat message"""
  message: String!

  """The date and time the chat was posted"""
  timestamp: DateTime

  """The user who posted the chat"""
  user: UserType
}

type GamesDataClockType {
  """The amount of time currently banked"""
  bank: Int

  """The game this bank belongs to"""
  game: GamesDataType

  """The player this bank belongs to"""
  user: UserType
}

type GamesDataPreviewType {
  """Any chat messages generated by the move"""
  messages: String

  """The string representing the board state"""
  renderRep: String
}

type GamesDataStateType {
  """The game this state is associated with"""
  game: GamesDataType

  """This state's unique ID"""
  id: ID

  """The render representation of this state"""
  renderrep: String!

  """The text of the state itself"""
  state: String!

  """The date and time this state was registered"""
  timestamp: Date!
}

type GamesDataType {
  """Whether the site admin has been called to review the game"""
  alert: Boolean!

  """The clock banks associated with this game"""
  banks: [GamesDataClockType]

  """The chats associated with this game, in ascending chronological order"""
  chats: [GamesDataChatType]

  """Whether this game clock is currently frozen"""
  clockFrozen: Boolean!

  """The game clock's increment value, in hours"""
  clockInc: Int

  """The game clock's maximum value, in hours"""
  clockMax: Int

  """The game clock's starting value, in hours"""
  clockStart: Int

  """Whether the game is over"""
  closed: Boolean!

  """All pending console commands attached to this game"""
  consoleCommands: [ConsoleType]

  """The game's unique ID number"""
  id: ID

  """This game's most recent state"""
  lastState: GamesDataStateType

  """The users playing this game"""
  players: [UserType]

  """This game's states in ascending chronological order"""
  states: [GamesDataStateType]

  """The type of game this is"""
  type: GamesMetaType

  """The variants in effect for this game"""
  variants: [String]

  """The list of players who can currently move in this game"""
  whoseTurn: [UserType]
}

type GamesMetaType {
  """Challenges associated with this game"""
  challenges: [ChallengeType]

  """Markdown-formatted log of changes made to the game code over time"""
  changelog: String

  """The date the game first went live"""
  dateLive: Date

  """A long-form, markdown-formatted description of the game"""
  description: String!

  """Game's unique ID number"""
  id: ID

  """Whether the game is currently available for play"""
  isLive: Boolean!

  """The result of the last status check of the game's code"""
  isUp: Boolean

  """The game's full name"""
  name: String!

  """List of the different player counts the game supports"""
  playerCounts: String!

  """The game's publisher"""
  publisher: PublisherType

  """The rankings given to this game by different users"""
  rankings: [RankType]

  """The game's short name (camel cased, no spaces)"""
  shortcode: String!

  """List of associated status messages"""
  statusHistory: [GameStatusType]

  """The tags applied to this game"""
  tags: [String]

  """
  The game's available variants (doesn't include built-in, universal variants)
  """
  variants: [VariantType]

  """The current version number of the game code"""
  version: String!
}

type GameStatusType {
  """Entry's unique ID number"""
  id: ID

  """Whether the code responded"""
  isUp: Boolean!

  """Details about the check"""
  message: String!

  """The date and time of the  update"""
  timestamp: Date!
}

type MeType {
  """Whether your account is flagged as anonymous"""
  anonymous: Boolean!

  """List of your clock banks"""
  banks: [GamesDataClockType]

  """Challenges extended directly to you"""
  challenged: [ChallengeType]

  """Challenges you have issued"""
  challenges: [ChallengeType]

  """The country you say you're from"""
  country: String!

  """The date your account was created"""
  created: Date!

  """List of direct messages received"""
  dms: [DmsType]

  """The games you are currently playing"""
  games: [GamesDataType]

  """Your ID number"""
  id: ID

  """The games in which you can currently move"""
  myTurn: [GamesDataType]

  """Your current display name"""
  name: String

  """Your past display names"""
  nameHistory: [NameHistoryType]

  """List of unread direct messages"""
  newDms: [DmsType]

  """Ranks you have applied"""
  ranks: [RankType]

  """your tagline"""
  tagline: String!

  """Tags you have applied"""
  tags: [TagType]
}

"""
The `Milliseconds` scalar type represents a period of time represented as the total number of milliseconds.
"""
scalar Milliseconds

"""The input required when submitting move requests"""
input MoveGameInput {
  """The game's ID number"""
  id: ID!

  """The move itself, using whatever notation the game supports"""
  move: String!
}

type NameHistoryType {
  """The date this name was effective from"""
  effectiveFrom: Date!

  """The display name"""
  name: String!
}

"""The input required when issuing a new challenge"""
input NewChallengeInput {
  """The game you want to play"""
  game: String!

  """The total number of players, including yourself"""
  numPlayers: Int!

  """Any notes you want potential challengers to see"""
  notes: String = null

  """Game clock starting value, in hours (default: 72)"""
  clockStart: Int = null

  """Game clock increment value, in hours (default: 24)"""
  clockInc: Int = null

  """Game clock maximum value, in hours (default: 240)"""
  clockMax: Int = null

  """
  Only considered for two-player games; a value of 1 means you want to go first;
  a value of 2 means your opponent will go first
  """
  seat: Int = null

  """A list of supported variants you wish to apply to this game"""
  variants: [String]!

  """
  A list of player IDs you wish to directly challenge; any remaining seats will be available to anyone
  """
  challengees: [String]!
}

"""The input required when posting a chat to a game"""
input NewChatInput {
  """The game's ID number"""
  id: ID!

  """The message you wish to post."""
  message: String!
}

"""The input required when issuing new console commands"""
input NewConsoleInput {
  """The game's ID number"""
  id: ID!

  """
  The command you wish to issue: `0` offers a draw, `1` freezes the clocks, `2` thaws them
  """
  command: Int!
}

"""The input required when creating a new profile"""
input NewProfileInput {
  """
  Your desired display name. It must be unique across names currently in use and those recently used.
  """
  name: String!

  """Whether you consent to the terms of service and the privacy policy"""
  consent: Boolean!

  """Whether you prefer to remain anonymous; can be changed at any time"""
  anonymous: Boolean = null

  """
  The ISO 3166-1 alpha-2 country code of where you want to tell people you're from
  """
  country: String = null

  """A free-form tagline (255 characters max)"""
  tagline: String = null
}

"""The input required when updating your profile"""
input PatchProfileInput {
  name: String = null
  country: String = null
  tagline: String = null
  anonymous: Boolean = null
}

type PublisherType {
  """Games by this publisher"""
  games: [GamesMetaType]

  """Publisher's unique ID number"""
  id: ID

  """Publisher's name"""
  name: String!

  """Publisher's website"""
  url: String!
}

"""The individual input required when updating your game rankings"""
input RankInput {
  """The game ID of the game being ranked"""
  game: String!

  """The rank assigned to this game"""
  rank: Int!
}

type RankType {
  """The game the rank applies to"""
  game: GamesMetaType

  """Rank entry's unique ID number"""
  id: ID

  """The rank itself"""
  rank: Int

  """The user who applied the rank"""
  user: UserType
}

"""The input required when marking DMs as read"""
input ReadDmsInput {
  """The message ID numbers"""
  ids: [String]!
}

"""The input required when resigning from games"""
input ResignGameInput {
  """The game's ID number"""
  id: ID!

  """To proceed, must be true. This action cannot be undone."""
  confirmed: Boolean!
}

"""
The input required when accepting or withdrawing from a pending challenge
"""
input RespondChallengeInput {
  """The challenge's ID number"""
  id: ID!

  """
  True accepts the challenge if not already accepted and does nothing if already
  accepted. If you are the last person to confirm, the game will immediately
  start. False withdraws from the challenge if already accepted and does nothing
  if not already accepted. If the issuer of the challenge withdraws, the
  challenge itself will be withdrawn, regardless of any other confirmed players.
  """
  confirmed: Boolean!
}

"""
The `Seconds` scalar type represents a period of time represented as the total number of seconds.
"""
scalar Seconds

"""The input required when sending a DM"""
input SendDmInput {
  """The recipient's ID number"""
  recipient: String!

  """Markdown-encoded message; maximum 65,535 characters"""
  message: String!
}

"""The individual input required when updating game tags"""
input TagInput {
  """The ID of the game being tagged"""
  game: String!

  """The tags assigned to this game"""
  tags: [String]!
}

type TagType {
  """The game the tag applies to"""
  game: GamesMetaType

  """Tag entry's unique ID number"""
  id: ID

  """The tag itself"""
  tag: String!

  """The user who applied the tag"""
  user: UserType
}

"""The input required when updating your game rankings"""
input UpdateRankingsInput {
  """The individual games and their ranks"""
  rankings: [RankInput]!
}

"""The input required when updating your game tags"""
input UpdateTagsInput {
  """The individual games and their tags"""
  tags: [TagInput]!
}

type UserType {
  """The clock banks associated with this user"""
  banks: [GamesDataClockType]

  """Challenges this user has issued"""
  challenges: [ChallengeType]

  """The country the user says they're from"""
  country: String

  """The date this account was created"""
  created: Date

  """The games this user is currently playing"""
  games: [GamesDataType]

  """User's ID number"""
  id: ID

  """User's current display name"""
  name: String

  """Past display names this player has used"""
  nameHistory: [NameHistoryType]

  """Rankings this user has given to different games"""
  rankings: [RankType]

  """The user's tagline"""
  tagline: String

  """The tags this user has applied"""
  tags: [TagType]

  """The games in which this player can currently move"""
  theirTurn: [GamesDataType]
}

type VariantType {
  """Variants with the same 'group' are mutually exclusive"""
  group: String!

  """Variant's unique ID number"""
  id: ID

  """The variant's display name"""
  name: String!

  """A short description of the variant"""
  note: String!
}

"""The input required when voting on a console command"""
input VoteConsoleInput {
  """The command's unique ID number"""
  id: ID!

  """Your yes/no vote"""
  vote: Boolean!
}

"""The input required when withdrawing a console command"""
input WithdrawConsoleInput {
  """The command's unique ID number"""
  id: ID!
}
